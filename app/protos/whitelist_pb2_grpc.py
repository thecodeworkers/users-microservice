# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from app.protos import whitelist_pb2 as app_dot_services_dot_whitelist_dot_whitelist__pb2


class WhitelistStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_all = channel.unary_unary(
                '/Whitelist/get_all',
                request_serializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistEmpty.SerializeToString,
                response_deserializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistMultipleResponse.FromString,
                )
        self.save = channel.unary_unary(
                '/Whitelist/save',
                request_serializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistNotIdRequest.SerializeToString,
                response_deserializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistResponse.FromString,
                )
        self.update = channel.unary_unary(
                '/Whitelist/update',
                request_serializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistRequest.SerializeToString,
                response_deserializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistResponse.FromString,
                )
        self.delete = channel.unary_unary(
                '/Whitelist/delete',
                request_serializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistIdRequest.SerializeToString,
                response_deserializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistResponse.FromString,
                )


class WhitelistServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get_all(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def save(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WhitelistServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_all': grpc.unary_unary_rpc_method_handler(
                    servicer.get_all,
                    request_deserializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistEmpty.FromString,
                    response_serializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistMultipleResponse.SerializeToString,
            ),
            'save': grpc.unary_unary_rpc_method_handler(
                    servicer.save,
                    request_deserializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistNotIdRequest.FromString,
                    response_serializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistResponse.SerializeToString,
            ),
            'update': grpc.unary_unary_rpc_method_handler(
                    servicer.update,
                    request_deserializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistRequest.FromString,
                    response_serializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistResponse.SerializeToString,
            ),
            'delete': grpc.unary_unary_rpc_method_handler(
                    servicer.delete,
                    request_deserializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistIdRequest.FromString,
                    response_serializer=app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Whitelist', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Whitelist(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get_all(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Whitelist/get_all',
            app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistEmpty.SerializeToString,
            app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistMultipleResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def save(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Whitelist/save',
            app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistNotIdRequest.SerializeToString,
            app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Whitelist/update',
            app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistRequest.SerializeToString,
            app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Whitelist/delete',
            app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistIdRequest.SerializeToString,
            app_dot_services_dot_whitelist_dot_whitelist__pb2.WhitelistResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
